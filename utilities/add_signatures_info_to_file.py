import csv
import ntpath
import os
import sys

with open(sys.argv[5], 'w', newline='') as output_file:
    writer = csv.writer(output_file)
    field = ["signature", "cuckoo_count", "cape_count", "cuckoo_description", "cuckoo_severity", "cuckoo_categories", "cuckoo_ttps", "cape_description", "cape_severity", "cape_confidence", "cape_categories", "cape_ttps", "cape_mbcs"]
    writer.writerow(field)

with open(sys.argv[1], newline='') as signatures_file:
    signatures_reader = csv.reader(signatures_file, dialect='excel')
    for row in signatures_reader:
        if "signature" in row[0] and "cuckoo_count" in row[1] and "cape_count" in row[2]: # first row containing header names
            continue
        #print(", ".join(row))
        #global cuckoo_signature_file_contents
        cuckoo_signature_file_contents = ""
        cuckoo_signature_file_found = False

        signature = row[0]
        cuckoo_count = row[1]
        cape_count = row[2]
        cuckoo_description = ""
        cuckoo_severity = ""
        cuckoo_categories = []
        cuckoo_ttps = ""
        cape_description = ""
        cape_severity = ""
        cape_confidence =""
        cape_categories = ""
        cape_ttps = []
        cape_mbcs = []

        os.chdir(sys.argv[2])
        for cuckoo_signature_file in os.listdir(sys.argv[2]): # checking Cuckoo windows dir
            if cuckoo_signature_file.endswith(".py"):
                filepath = os.path.abspath(cuckoo_signature_file)
                filename = ntpath.basename(filepath)
                with open(filepath, "r") as file:
                    cuckoo_signature_file_contents = file.read()
                    if 'name = "{}"'.format(row[0]) in cuckoo_signature_file_contents:
                        #print(cuckoo_signature_file_contents)
                        cuckoo_signature_file_found = True
                        #print("found signature name in windows dir file")
                        break
        if not cuckoo_signature_file_found:
            os.chdir(sys.argv[3])
            for cuckoo_signature_file in os.listdir(sys.argv[3]): # checking Cuckoo networks dir if not found in Windows dirÂ´
                if cuckoo_signature_file.endswith(".py"):
                    filepath = os.path.abspath(cuckoo_signature_file)
                    filename = ntpath.basename(filepath)
                    with open(filepath, "r") as file:
                        cuckoo_signature_file_contents = file.read()
                        if 'name = "{}"'.format(row[0]) in cuckoo_signature_file_contents:
                            cuckoo_signature_file_found = True
                            print("found signature name in network dir file: {}".format(filename))
                            #print("cuckoo_signature_file_contents: {}".format(cuckoo_signature_file_contents))
                            break

        os.chdir(sys.argv[4])
        for cape_signature_file in os.listdir(sys.argv[4]):  # checking Cape signatures dir
            if cape_signature_file.endswith(".py"):
                filepath = os.path.abspath(cape_signature_file)
                filename = ntpath.basename(filepath)
                with open(filepath, "r") as file:
                    cape_signature_file_contents = file.read()
                    if 'name = "{}"'.format(row[0]) in cape_signature_file_contents:
                        cape_signature = cape_signature_file_contents.split('name = "{}"'.format(signature))[1].split('def')[0]
                        cape_description = cape_signature.split('description = "')[1].split('"')[0]
                        cape_severity = cape_signature.split('severity = ')[1].split('\n')[0] if 'severity = ' in cape_signature else ""
                        cape_confidence = cape_signature.split('confidence = ')[1].split('\n')[0] if 'confidence = ' in cape_signature else ""
                        cape_categories = cape_signature.split('categories = ')[1].split('\n')[0].replace('"', '') if 'categories = ' in cape_signature else ""

                        cape_temp_ttps = cape_signature.split('ttps = ')[1] if 'ttps = ' in cape_signature else []
                        cape_ttps.append(cape_signature.split('ttps = ')[1].split('\n')[0].replace('"', '')) if 'ttps = ' in cape_signature else []
                        if 'ttps += ' in cape_temp_ttps:
                            i = 0
                            for additional_ttps in cape_temp_ttps.split('ttps += '):
                                if i > 0:
                                    cape_ttps.append(additional_ttps.split(']')[0].replace('"', ''))
                                i += 1

                        cape_temp_mbcs = cape_signature.split('mbcs = ')[1] if 'mbcs = ' in cape_signature else []
                        cape_mbcs.append(cape_signature.split('mbcs = ')[1].split('\n')[0].replace('"', '')) if 'mbcs = ' in cape_signature else []
                        if 'mbcs += ' in cape_temp_mbcs:
                            i = 0
                            for additional_mbcs in cape_temp_mbcs.split('mbcs += '):
                                if i > 0:
                                    cape_mbcs.append(additional_ttps.split(']')[0].replace('"', ''))
                                i += 1
                        break

        if cuckoo_signature_file_found:
            cuckoo_signature = cuckoo_signature_file_contents.split('name = "{}"'.format(signature))[1].split('def')[0]
            cuckoo_description = cuckoo_signature.split('description = "')[1].split('"')[0]
            cuckoo_severity = cuckoo_signature.split('severity = ')[1].split('\n')[0] if 'severity = ' in cuckoo_signature else ""
            cuckoo_categories = cuckoo_signature.split('categories = ')[1].split('\n')[0].replace('"', '') if 'categories = ' in cuckoo_signature else ""
            cuckoo_ttps = cuckoo_signature.split('ttp = ')[1].split('\n')[0].replace('"', '') if 'ttp = ' in cuckoo_signature else ""

        with open(sys.argv[5], 'a', newline='') as output_file:
            writer = csv.writer(output_file)
            field = [signature, cuckoo_count, cape_count, cuckoo_description, cuckoo_severity,
                     cuckoo_categories, cuckoo_ttps, cape_description, cape_severity, cape_confidence,
                     cape_categories, cape_ttps, cape_mbcs]
            writer.writerow(field)