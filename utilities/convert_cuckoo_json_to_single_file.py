import json
import os
import signal
import sys
from datetime import datetime
import progressbar

do_process = True
sigint_count = 0


def signal_handler(sig, frame):
    global do_process
    global sigint_count
    if sigint_count == 0:
        print("Received sigint once... Exiting gracefully...")
        do_process = False
        sigint_count += 1
    else:
        print("Received sigint twice.. Forcing exit...")
        sys.exit(0)


signal.signal(signal.SIGINT, signal_handler)

os.chdir(sys.argv[1])
print("Converting Cuckoo json reports to single file from dir: " + sys.argv[1])
i = 1
listdir = os.listdir(sys.argv[1])
number_of_files = len(listdir)
print("Converting {} files...".format(number_of_files))
result = {}
with open(sys.argv[2], "w") as output_file:
    output_file.write("[\n")
with progressbar.ProgressBar(max_value=number_of_files, redirect_stdout=True) as bar:
    for item in os.listdir(sys.argv[1]): #input dir: /Users/fyxe/IdeaProjects/malware-web-scraper/malware/reports/cuckoo/zip/
        if do_process:
            if item.endswith(".json"):
                filepath = os.path.abspath(item)
                with open(filepath, "r") as file:
                        #print("file: {}".format(filepath))
                    try:
                        data = json.load(file)
                        md5 = ""
                        sha1 = ""
                        sha256 = data["target"]["file"]["sha256"] if "sha256" in data["target"]["file"] else ""
                        url = "https://cuckoo.cert.ee/analysis/{}/".format(data["info"]["id"])
                        completed_at = datetime.fromtimestamp(data["info"]["ended"]).strftime("%Y-%m-%d %H:%M:%S")
                        signatures = []
                        virustotal_reports = []
                        if data["signatures"]:
                            for signature in data["signatures"]:
                                if "name" in signature:
                                    if sys.argv[3] == "include_virustotal" and signature["name"] == "antivirus_virustotal":
                                        virustotal_reports = signature["marks"]
                                        md5 = data["target"]["file"]["md5"] if "md5" in data["target"]["file"] else ""
                                        sha1 = data["target"]["file"]["sha1"] if "sha1" in data["target"]["file"] else ""
                                    signatures.append(signature["name"])
                        if virustotal_reports:
                            data_set = {"sha256": sha256, "sha1": sha1, "md5": md5, "url": url, "completed_at": completed_at, "signatures": signatures, "virustotal_reports": virustotal_reports}
                        else:
                            data_set = {"sha256": sha256, "url": url, "completed_at": completed_at, "signatures": signatures}
                        #print(json.dumps(data_set))
                        with open(sys.argv[2], "a") as output_file:
                            json.dump(data_set, output_file)
                            if i == number_of_files - 1:
                                output_file.write("\n")
                            else:
                                output_file.write(",\n")
                    except Exception as e:
                        print("Error converting {}... Skipping this file... Exception was: {}".format(filepath, e))
                #if i % 100 == 0:
                #    print("Converted {} out of {} files... {}% done...".format(i, number_of_files, (i*100/number_of_files)))
                bar.update(i)
                i += 1
        else:
            break
with open(sys.argv[2], "a") as output_file:
    output_file.write("]")
